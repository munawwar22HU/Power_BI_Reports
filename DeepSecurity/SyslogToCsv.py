# Importing Required Modules
import glob
import csv
import sys
# Get FilePath
BASEPATH = "C:\PowerBI\Power_BI_Reports\DeepSecurity\SyslogCatchAll-"
#DATE = "2021-08-04"
DATE = sys.argv[1]
FILENAME = BASEPATH+DATE+".txt"
# Read file into a Datum List.
Datum = list()
File = open(FILENAME)
Datum.extend(File.readlines())

#################### HELPER FUNCTIONS ####################


def WriteContent(Data, filename, header):
    with open(filename, "w", newline='') as f:
        writer = csv.writer(f)
        if header != None:
            writer.writerow(header)
        for data in Data:
            writer.writerow(data)


def GenerateRow(IndexKeys, Extension, Data):
    Indexes = list(IndexKeys.values())
    for index in range(1, len(Indexes)):
        temp = Extension[Indexes[index - 1]:Indexes[index]].strip()
        Data.append(temp[temp.find("=")+1:])
    temp = Extension[Indexes[-1]:].strip()
    Data.append(temp[temp.find("=")+1:])
    return Data


################## GLOBAL LIST ##################
CustomLog = list()
IntegrityMonitoring = list()
LogInspection = list()
Result = list()
Global = list()
IdKeys = {"Syslog": 0, "SystemEvent": 0, "CustomLog": 0,
          "LogInspection": 0, "IntegrityMonitoring": 0}
#################################################
for line in Datum:
    GlobalData = list()
    Data = list()
    IndexKeys = dict()
    split_pipe = line.strip().split("|")

    # Extract Header Information
    Header = split_pipe[0]
    HeaderSplit = Header.split("\t")
    # Extract Log Generation Date
    value = HeaderSplit[0]
    value = value[0:value.find("TMDSSERVER")].strip()

    # Common Fields that are present in all logs
    # ["Receiving Time","Generated Time","Service Facility","IPv4 Address","DeviceVendor","DeviceProduct","DeviceVersion","SignatureID","Name","Severity"]
    GlobalData.append(IdKeys["Syslog"])
    IdKeys["Syslog"] += 1
    GlobalData.append(value)
    GlobalData.extend(HeaderSplit[:-1])
    GlobalData.extend(split_pipe[1:7])

    # The event type can be determined by device Product and the signature id of the event
    # Security Events are generated by Deep Security Agent
    # System Events are generated by Deep Security Manager
    SignatureID = int(split_pipe[4])
    Extension = split_pipe[7]

    # The event is generated by Deep Security Agent
    if split_pipe[2] == "Deep Security Agent":

        # Custom Log Events
        if SignatureID == 40:
            IndexKeys["cn1"] = Extension.find("cn1=")
            IndexKeys["cn1Label"] = Extension.find("cn1Label=")
            IndexKeys["dvc"] = Extension.find("dvc")
            IndexKeys["TrendMicroDsTenant"] = Extension.find(
                "TrendMicroDsTenant")
            IndexKeys["TrendMicroDsTenantId"] = Extension.find(
                "TrendMicroDsTenantId")
            IndexKeys["cs1"] = Extension.find("cs1=")
            IndexKeys["cs1Label"] = Extension.find("cs1Label=")
            IndexKeys["fname"] = Extension.find("fname=")
            IndexKeys["duser"] = Extension.find("duser=")
            IndexKeys["shost"] = Extension.find("shost=")
            IndexKeys["msg"] = Extension.find("msg=")

            Data.append(IdKeys["CustomLog"])
            GlobalData.append(IdKeys["CustomLog"])
            IdKeys["CustomLog"] += 1
            Data = GenerateRow(IndexKeys, Extension, Data)
            CustomLog.append(Data)

        elif 2000000 <= SignatureID <= 2999999:
            IndexKeys = dict()
            IndexKeys["cn1"] = Extension.find("cn1=")
            IndexKeys["cn1Label"] = Extension.find("cn1Label=")
            IndexKeys["dvc"] = Extension.find("dvc")
            IndexKeys["TrendMicroDsTenant"] = Extension.find(
                "TrendMicroDsTenant")
            IndexKeys["TrendMicroDsTenantId"] = Extension.find(
                "TrendMicroDsTenantId")
            IndexKeys["act"] = Extension.find("act")
            IndexKeys["filePath"] = Extension.find("filePath")
            IndexKeys["suser"] = Extension.find("suser")
            IndexKeys["sproc"] = Extension.find("sproc")
            IndexKeys["msg"] = Extension.find("msg")

            Data.append(IdKeys["IntegrityMonitoring"])
            GlobalData.append(IdKeys["IntegrityMonitoring"])
            IdKeys["IntegrityMonitoring"] += 1
            Data = GenerateRow(IndexKeys, Extension, Data)
            IntegrityMonitoring.append(Data)

        elif 3000000 <= SignatureID <= 3999999:
            IndexKeys = dict()
            IndexKeys["cn1"] = Extension.find("cn1=")
            IndexKeys["cn1Label"] = Extension.find("cn1Label=")
            IndexKeys["dvc"] = Extension.find("dvc=")
            IndexKeys["TrendMicroDsTenant"] = Extension.find(
                "TrendMicroDsTenant=")
            IndexKeys["TrendMicroDsTenantId"] = Extension.find(
                "TrendMicroDsTenantId=")
            IndexKeys["cs1"] = Extension.find("cs1=")
            IndexKeys["cs1Label"] = Extension.find("cs1Label=")
            IndexKeys["fname"] = Extension.find("fname=")
            IndexKeys["duser"] = Extension.find("duser=")
            IndexKeys["shost"] = Extension.find("shost=")
            IndexKeys["msg"] = Extension.find("msg=")
            Indexes = list(IndexKeys.values())

            Data.append(IdKeys["LogInspection"])
            GlobalData.append(IdKeys["LogInspection"])
            IdKeys["LogInspection"] += 1
            Data = GenerateRow(IndexKeys, Extension, Data)
            LogInspection.append(Data)
    else:
        IndexKeys["src"] = Extension.find("src")
        IndexKeys["suser"] = Extension.find("suser")
        IndexKeys["target"] = Extension.find("target")
        IndexKeys["msg"] = Extension.find("msg")
        IndexKeys["TrendMicroDsTenant"] = Extension.find("TrendMicroDsTenant")
        IndexKeys["TrendMicroDsTenantID"] = Extension.find(
            "TrendMicroDsTenantId")

        if IndexKeys["target"] == -1:
            IndexKeys["target"] = IndexKeys["msg"]

        Data.append(IdKeys["SystemEvent"])
        GlobalData.append(IdKeys["SystemEvent"])
        IdKeys["SystemEvent"] += 1
        Data = GenerateRow(IndexKeys, Extension, Data)
        Result.append(Data)
    Global.append(GlobalData)

# System Event
Header = ["Id", "src", "suser", "target", "msg",
          "TrendMicroDsTenant", "TrendMicroDsTenantId"]
WriteContent(
    Result, "C:\PowerBI\Power_BI_Reports\DeepSecurity\SystemEvents-"+DATE+".csv", Header)

# Integrity Monitoring
IntegrityMonitoringHeader = ["Id", "Host ID", "Host ID Label", "Dvc",
                             "TrendMicroDsTenant", "TrendMicroDsTenantId", "Act", "filePath", "suser", "sproc", "msg"]
WriteContent(IntegrityMonitoring,
             "C:\\PowerBI\\Power_BI_Reports\DeepSecurity\\IntegrityMonitoring-"+DATE+".csv", IntegrityMonitoringHeader)
# Custom Log
CustomLogHeader = ["Id", "Host ID", "Host ID Label", "dvc", "TrendMicroDsTenant",
                   "TrendMicroDsTenantId", "LI Description", "LI Description Label", "fname", "duser", "shost", "msg"]
WriteContent(
    CustomLog, "C:\\PowerBI\\Power_BI_Reports\DeepSecurity\\CustomLog-"+DATE+".csv", CustomLogHeader)

# Log Inspection
LogInspectionHeader = ["Id", "Host ID", "Host ID Label", "dvc", "TrendMicroDsTenant",
                       "TrendMicroDsTenantId", "LI Description", "LI Description Label", "fname", "duser", "shost", "msg"]
WriteContent(LogInspection,
             "C:\\PowerBI\\Power_BI_Reports\DeepSecurity\\LogInspection-"+DATE+".csv", LogInspectionHeader)
# Global Syslog

Header = ["Id", "Receiving Time", "Generated Time", "Service Facility", "IPv4 Address",
    "DeviceVendor", "DeviceProduct", "DeviceVersion", "SignatureID", "Name", "Severity", "EventId"]
WriteContent(Global, "C:\\PowerBI\\Power_BI_Reports\DeepSecurity\\Global-"+DATE+".csv", Header)
